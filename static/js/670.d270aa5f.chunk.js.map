{"version":3,"file":"static/js/670.d270aa5f.chunk.js","mappings":"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","sources":["apis/utils/index.js","apis/api/api.js","components/ConnectedUser.jsx","components/ConnectedCount.jsx","components/DailyActive.jsx","components/TopReferral.jsx","components/TopReferralTable.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL:\"https://static.adbrix.io/front/coding-test\",\n});\n\ninstance.interceptors.request.use(\n  function (config) {\n    return config\n  },\n  function (error) {\n    return Promise.reject(error)\n  }\n);\n\ninstance.interceptors.response.use(\n  function (response) {\n    return response\n  },\n  function (error) {\n    return Promise.reject(error)\n  }\n);\n\nexport default instance;","import CommonAxios from \"apis/utils/index\";\n\nexport default {\n  getInfoList () {\n    return CommonAxios({\n      url: \"/event_1.json\",\n      method: \"GET\"\n    });\n  },\n  getChartList () {\n    return CommonAxios({\n      url: \"/event_3.json\",\n      method: \"GET\"\n    });\n  },\n  getCountryList () {\n    return CommonAxios({\n      url: \"event_4.json\",\n      method: \"GET\"\n    });\n  }\n}","/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { css } from \"@emotion/react\";\n\nconst ConnectedUser = ({ data }) => {\n\n  const calculateTotal = () => {\n    let total = 0;\n\n    data.forEach(item => {\n      total += parseInt(item[1], 10);\n    });\n\n    return total;\n  };\n\n  const differenceDateCount = (data) => {\n    const sortedData = [...data].sort((a, b) => new Date(b[0]) - new Date(a[0]));\n    const latestDateData = sortedData[0];\n    const latestDateCount = parseInt(latestDateData[1], 10);\n    const yesterdayCount = sortedData.length > 1 ? parseInt(sortedData[1][1], 10) : 0;\n    const difference = latestDateCount - yesterdayCount;\n    \n    return difference;\n  };\n\n  return (\n    <div css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: space-between;\n              height: 100%;\n              padding: 10px 15px;\n              background-color: #fff;\n              text-align: left;\n            `}\n    >\n      <p css={css`\n            color: #66ADE5;\n            font-weight: 600;\n            `}\n      >\n        접속유저\n      </p>\n      <p>\n        <span css={css`\n                    font-size: 12px;\n                    color: #999;\n                    background-color: #e6e6e6;\n                    padding: 4px;\n                    border-radius: 3px;\n                  `}\n        >\n          SUM\n        </span>\n        <span css={css`\n                    color: #999;\n                    padding-left: 10px;\n                  `}\n        >\n          Unique Event Count\n        </span>\n      </p>\n      <p css={css`\n              font-size: 26px;\n              font-weight: 600;\n            `}\n      >\n        {data.length && calculateTotal(data)}\n      </p>\n      <p>{data.length && differenceDateCount(data)}</p>\n    </div>\n  );\n};\n\nexport default ConnectedUser;\n","/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { css } from \"@emotion/react\";\n\nconst ConnectedCount = ({ data }) => {\n\n  const calculateTotal = (data) => {\n    let total = 0;\n\n    data.forEach(item => {\n      total += parseInt(item[2], 10);\n    });\n\n    return total;\n\n  };\n\n  const differenceDateCount = (data) => {\n    const sortedData = [...data].sort((a, b) => new Date(b[0]) - new Date(a[0]));\n    const latestDateData = sortedData[0];\n    const latestDateCount = parseInt(latestDateData[2], 10);\n    const yesterdayCount = sortedData.length > 1 ? parseInt(sortedData[2][2], 10) : 0;\n    const difference = latestDateCount - yesterdayCount;\n    \n    return difference;\n  };\n\n  return (\n    <div css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: space-between;\n              height: 100%;\n              padding: 10px 15px;\n              background-color: #fff;\n              text-align: left;\n            `}\n    >\n      <p css={css`\n            color: #66ADE5;\n            font-weight: 600;\n            `}\n      >\n        접속횟수\n      </p>\n      <p>\n        <span css={css`\n                    font-size: 12px;\n                    color: #999;\n                    background-color: #e6e6e6;\n                    padding: 4px;\n                    border-radius: 3px;\n                  `}\n        >\n          SUM\n        </span>\n        <span css={css`\n                    color: #999;\n                    padding-left: 10px;\n                  `}\n        >\n          Total Event Count\n        </span>\n      </p>\n      <p css={css`\n              font-size: 26px;\n              font-weight: 600;\n            `}\n      >\n        {data.length && calculateTotal(data)}\n      </p>\n      <p>{data.length && differenceDateCount(data)}</p>\n    </div>\n  );\n};\n\nexport default ConnectedCount;\n","/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { css } from \"@emotion/react\";\n\nconst chartData = [\n  { name: 'A', value: 30, lineValue: 70 },\n  { name: 'B', value: 45, lineValue: 50 },\n  { name: 'C', value: 20, lineValue: 80 },\n  // ... 추가 데이터\n];\n\nconst DailyActive = ({ data }) => {\n\n  // 날짜를 기준으로 정렬\n  const sortedData = data.sort((a, b) => new Date(a[0]) - new Date(b[0]));\n\n  const formatYAxis = (tick) => {\n    return `${tick / 1000}k`;\n  };\n\n  return (\n    <div css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: space-between;\n              height: 100%;\n              padding: 10px 15px;\n              background-color: #fff;\n              text-align: left;\n            `}\n    >\n      <p css={css`\n            color: #66ADE5;\n            font-weight: 600;\n            `}\n      >\n        DAU\n      </p>\n      <ComposedChart width={800} height={400} data={sortedData}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={(entry, index) => index} />\n        <YAxis tickFormatter={formatYAxis} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey={entry => parseInt(entry[1])} fill=\"#8884d8\" name=\"Unique Event Count\" />\n        <Line type=\"monotone\" dataKey={entry => parseInt(entry[2])} stroke=\"#82ca9d\" name=\"Total Event Count\" />\n      </ComposedChart>\n    </div>\n  );\n};\n\nexport default DailyActive;\n","/** @jsxImportSource @emotion/react */\nimport React, { useState, useEffect } from 'react';\nimport { PieChart, Pie, Tooltip, Cell, Legend } from 'recharts';\nimport axios from \"apis/api/api\";\nimport { css } from \"@emotion/react\";\n\nconst TopReferral = () => {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getInfoData();\n  }, []);\n\n  const getInfoData = () => {\n    axios.getChartList()\n    .then((res) => {\n      if(res.data.message === \"ok\") {\n        setData(res.data.data.rows);\n      }\n    });\n  };\n\n  const groupedData = data.map(entry => {\n    const [url, value] = entry;\n    const isEtc = ![\"www.google.com\", \"adbrix.io\", \"console.dfinery.io\", \"www.dfinery.io\"].includes(url);\n    return [isEtc ? \"etc\" : url, parseInt(value)];\n  });\n  \n  // Combine data for the same category\n  const combinedData = Object.values(groupedData.reduce((acc, [category, value]) => {\n    acc[category] = acc[category] || { category, value: 0 };\n    acc[category].value += value;\n    return acc;\n  }, {}));\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#4D4D4D', '#FF7F7F', '#7FBFFF', '#4DFFE0', '#FFD700'];\n\n  return (\n    <div css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: space-between;\n              height: 100%;\n              padding: 10px 15px;\n              background-color: #fff;\n              text-align: left;\n            `}\n    >\n      <p css={css`\n            color: #66ADE5;\n            font-weight: 600;\n            `}\n      >\n        Top Referral\n      </p>\n      <PieChart width={400} height={400}>\n        <Pie\n          data={combinedData}\n          dataKey=\"value\"\n          cx={200}\n          cy={200}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          label={(entry) => entry.payload.category === 'etc' ? 'etc' : entry.payload.category}\n        >\n          {combinedData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n        <Tooltip />\n      </PieChart>\n    </div>\n  );\n};\n\nexport default TopReferral;\n","/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { css } from \"@emotion/react\";\n\nconst TopReferralTable = () => {\n  return (\n    <div css={css`\n              display: flex;\n              flex-direction: column;\n              justify-content: space-between;\n              height: 100%;\n              padding: 10px 15px;\n              background-color: #fff;\n              text-align: left;\n            `}\n    >\n      <p css={css`\n            color: #66ADE5;\n            font-weight: 600;\n            `}\n      >\n        Top Referral\n      </p>\n    </div>\n  );\n};\n\nexport default TopReferralTable;\n","/** @jsxImportSource @emotion/react */\r\nimport React, { useState, useEffect } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport axios from \"apis/api/api\";\r\nimport ConnectedUser from 'components/ConnectedUser';\r\nimport ConnectedCount from 'components/ConnectedCount';\r\nimport DailyActive from 'components/DailyActive';\r\nimport TopReferral from 'components/TopReferral';\r\nimport TopReferralTable from 'components/TopReferralTable';\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst Home = () => {\r\n\r\n  const [responseData, setResponseData] = useState([]);\r\n  \r\n  const layout = [\r\n    { i: 'a', x: 0, y: 0, w: 2, h: 5, component: ConnectedUser },\r\n    { i: 'b', x: 2, y: 0, w: 2, h: 5, component: ConnectedCount },\r\n    { i: 'c', x: 0, y: 1, w: 6, h: 12, component: DailyActive },\r\n    { i: 'd', x: 0, y: 2, w: 2, h: 10, component: TopReferral },\r\n    { i: 'e', x: 2, y: 2, w: 2, h: 10, component: TopReferralTable }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getInfoData();\r\n  }, []);\r\n\r\n  const getInfoData = () => {\r\n    axios.getInfoList()\r\n    .then((res) => {\r\n      if(res.data.message === \"ok\") {\r\n        setResponseData(res.data.data.rows);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GridLayout \r\n      className=\"layout\" \r\n      layout={layout} \r\n      cols={5} \r\n      rowHeight={30} \r\n      width={1000}\r\n      css={css`\r\n        background-color: #d9d9d9;\r\n      `}\r\n    >\r\n      {layout.map((item) => (\r\n        <div key={item.i}>\r\n          {item.component ? <item.component data={responseData} /> : null}\r\n        </div>\r\n      ))}\r\n    </GridLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","error","Promise","reject","response","getInfoList","CommonAxios","url","method","getChartList","getCountryList","_ref","data","_jsxs","css","_templateObject","_taggedTemplateLiteral","children","_jsx","_templateObject2","_templateObject3","_templateObject4","_templateObject5","length","calculateTotal","total","forEach","item","parseInt","sortedData","sort","a","b","Date","latestDateData","differenceDateCount","ComposedChart","width","height","CartesianGrid","strokeDasharray","XAxis","dataKey","entry","index","YAxis","tickFormatter","tick","concat","Tooltip","Legend","Bar","fill","name","Line","type","stroke","TopReferral","setData","useState","useEffect","getInfoData","then","res","message","rows","groupedData","map","value","includes","combinedData","Object","values","reduce","acc","category","COLORS","PieChart","Pie","cx","cy","outerRadius","label","payload","Cell","TopReferralTable","Home","responseData","setResponseData","layout","i","x","y","w","h","component","ConnectedUser","ConnectedCount","DailyActive","GridLayout","className","cols","rowHeight"],"sourceRoot":""}