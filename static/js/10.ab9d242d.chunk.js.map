{"version":3,"file":"static/js/10.ab9d242d.chunk.js","mappings":"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","sources":["hooks/useApi.ts","components/proposal/Invest.tsx","components/proposal/CreateProposal.tsx","pages/proposal/ProposalDetail.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios, { AxiosResponse, AxiosError, Method } from 'axios';\r\n\r\ntype UseApiProps<T extends { resultCode: string }> = {\r\n  endpoint: string;\r\n  method: Method;\r\n};\r\n\r\ntype UseApiResult<T> = {\r\n  data: T | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  execute: (postData?: Record<string, any>) => Promise<void>;\r\n};\r\n\r\nconst useApi = <T extends { resultCode: string }>({ endpoint, method }: UseApiProps<T>): UseApiResult<T> => {\r\n  const [data, setData] = useState<T | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const execute = async (postData?: Record<string, any>): Promise<void> => {\r\n    setLoading(true);\r\n    try {\r\n      const response: AxiosResponse<T & { resultMessage?: string }> = await axios({\r\n        method,\r\n        url: `${baseUrl}/${endpoint}`,\r\n        data: postData,\r\n      });\r\n\r\n      if (response.data.resultCode === '0000') {\r\n        setData(response.data);\r\n      } else {\r\n        setError(response.data.resultMessage || 'An error occurred');\r\n      }\r\n    } catch (error: any) {\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { data, loading, error, execute };\r\n};\r\n\r\nexport default useApi;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react';\r\nimport { css } from '@emotion/react';\r\nimport HomeText from \"constants/HomeText\";\r\nimport BaseButton from 'components/BaseButton';\r\n\r\ninterface ChildProps {\r\n  handleSelect: (value: boolean) => void;\r\n}\r\n\r\nconst Invest: React.FC<ChildProps> = ({ handleSelect }) => {\r\n\r\n  const currentSubText = HomeText[1]?.subText || [];\r\n\r\n  return (\r\n    <div css={css`\r\n              display: flex;\r\n              justify-content: space-between;\r\n            `}\r\n    >\r\n      <div css={css`width: 50%;`}>\r\n        <div>\r\n          <BaseButton\r\n            text=\"Invest\"\r\n            style={selectedStyle}\r\n            onClick={() => handleSelect(true)}\r\n          />\r\n          <BaseButton \r\n          text=\"Create New Proposal\"\r\n          style={deSelectedStyle}\r\n          onClick={() => handleSelect(false)}\r\n          />\r\n        </div>\r\n        <div css={css`\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                  justify-content: center;\r\n                  text-align: left;\r\n                  padding-top: 40px;\r\n                `}\r\n        >\r\n          <p css={css`\r\n                  align-self: flex-start;\r\n                  color: #fff;\r\n                  font-size: 50px;\r\n                  font-weight: 700;\r\n                  line-height: 58px;\r\n                `}\r\n          >\r\n            {HomeText[1]?.mainText1}\r\n          </p>\r\n          <p css={css`\r\n                  align-self: flex-start;\r\n                  font-size: 50px;\r\n                  font-weight: 700;\r\n                  line-height: 58px;\r\n                  background: linear-gradient(to right, #39945C, #82E5A8 );\r\n                  -webkit-background-clip: text;\r\n                  color: transparent;\r\n                  padding-bottom: 44px;\r\n                `}\r\n          >\r\n            {HomeText[1]?.mainText2}\r\n          </p>\r\n          <div css={css`max-width: 65%;`}\r\n          >\r\n          {currentSubText.map((text, index) => (\r\n            <p \r\n              key={index}\r\n              css={css`\r\n                    color: #9e9e9e;\r\n                    font-size: 14px;\r\n                    line-height: 22px;\r\n                    padding-bottom: 16px; \r\n                  `}\r\n            >\r\n              {text}\r\n            </p>\r\n          ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invest;\r\n\r\nconst selectedStyle = css`\r\n  height: auto;\r\n  padding: 8px 20px;\r\n  color: #fff;\r\n  background-color: transparent;\r\n  border-radius: 0;\r\n  border: none;\r\n  border-bottom: 2px solid #fff;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst deSelectedStyle = css`\r\n  height: auto;\r\n  padding: 8px 20px;\r\n  color: #9E9E9E;\r\n  background-color: transparent;\r\n  border-radius: 0;\r\n  border: none;\r\n  margin-right: 16px;\r\n`;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Upload, message } from \"antd\";\r\nimport { css } from '@emotion/react';\r\nimport { ethers } from \"ethers\";\r\nimport { useWalletStore } from 'store/store';\r\nimport useApi from \"hooks/useApi\";\r\nimport CrowdAbi from \"abi/CrowdFundHYPCPool.json\";\r\nimport ApproveAbi from \"abi/HyperCycleToken.json\";\r\nimport HomeText from \"constants/HomeText\";\r\nimport BaseButton from 'components/BaseButton';\r\nimport icon_upload from \"assets/images/proposal/icon_upload.png\";\r\n\r\ninterface ChildProps {\r\n  handleSelect: (value: boolean) => void;\r\n}\r\n\r\ninterface CustomWindow extends Window {\r\n  ethereum?: any;\r\n}\r\n\r\nconst CreateProposal: React.FC<ChildProps> = ({ handleSelect }) => {\r\n  const [selectedButton, setSelectedButton] = useState(\"18\");\r\n  const currentSubText = HomeText[2]?.subText || [];\r\n  const customWindow = window as CustomWindow;\r\n  const { ethersProvider } = useWalletStore();\r\n  const endpoint = \"v1/proposal\";\r\n  const { data, loading, error, execute } = useApi({ endpoint, method: \"POST\" });\r\n  const postData = {\r\n    ownerAddress: \"\",\r\n    proposalTitle: \"\",\r\n    targetAmount: 1\r\n  };\r\n\r\n  const beforeUpload = (file: File) => {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    return isJpgOrPng;\r\n  };\r\n\r\n  const callSmartContract = async () => {\r\n    const abi = ApproveAbi.abi;\r\n    const contractAddress = ApproveAbi.address;\r\n    const contract = new ethers.Contract(contractAddress, abi, ethersProvider);\r\n    const result = await contract.approve();\r\n    console.log(result);\r\n    await createProposal();\r\n  };\r\n\r\n  const createProposal = async () => {\r\n    // Approve 먼저 호출 => HYPercycleTokenADDRESS\r\n    // uint256 termNum, uint256 backingFunds, string memory assignmentString, uint256 deadline, uint256 specifiedFee\r\n    // termNum => 0: 18, 1: 24, 2: 36 month\r\n    // assignmentString => license No\r\n    // deadline => unixtime\r\n    // specifiedFee => 100 HYPC로 하드코딩\r\n    const abi = CrowdAbi.abi;\r\n    const contractAddress = CrowdAbi.address;\r\n    const contract = new ethers.Contract(contractAddress, abi, ethersProvider);\r\n    const transactionHash = await contract.createProposal();\r\n    await execute({\r\n      ownerAddress: \"0x123123123\",\r\n      proposalTitle: \"test\",\r\n      targetAmount: 1,\r\n      transactionId: transactionHash\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div css={css`\r\n              display: flex;\r\n              justify-content: space-between;\r\n            `}\r\n    >\r\n      {/* text field */}\r\n      <div css={css`width: 50%;`}>\r\n        {/* select Invest or Create Proposal */}\r\n        <div>\r\n          <BaseButton\r\n            text=\"Invest\"\r\n            style={deSelectedStyle}\r\n            onClick={() => handleSelect(true)}\r\n          />\r\n          <BaseButton \r\n          text=\"Create New Proposal\"\r\n          style={selectedStyle}\r\n          onClick={() => handleSelect(false)}\r\n          />\r\n        </div>\r\n        {/* select Invest or Create Proposal */}\r\n        {/* Fundraiser Text */}\r\n        <div css={css`\r\n                  display: flex;\r\n                  flex-direction: column;\r\n                  justify-content: center;\r\n                  height: 100%;\r\n                  text-align: left;\r\n                  padding-top: 40px;\r\n                `}\r\n        >\r\n          <p css={css`\r\n                  align-self: flex-start;\r\n                  color: #fff;\r\n                  font-size: 50px;\r\n                  font-weight: 700;\r\n                  line-height: 58px;\r\n                `}\r\n          >\r\n            {HomeText[2]?.mainText1}\r\n          </p>\r\n          <p css={css`\r\n                  align-self: flex-start;\r\n                  font-size: 50px;\r\n                  font-weight: 700;\r\n                  line-height: 58px;\r\n                  background: linear-gradient(to right, #39945C, #82E5A8 );\r\n                  -webkit-background-clip: text;\r\n                  color: transparent;\r\n                  padding-bottom: 44px;\r\n                `}\r\n          >\r\n            {HomeText[2]?.mainText2}\r\n          </p>\r\n          <div css={css`padding-right: 40px;`}>\r\n          {currentSubText.map((text, index) => (\r\n            <p \r\n              key={index}\r\n              css={css`\r\n                    color: #9e9e9e;\r\n                    font-size: 14px;\r\n                    line-height: 22px;\r\n                    padding-bottom: 16px; \r\n                  `}\r\n            >\r\n              {text}\r\n            </p>\r\n          ))}\r\n          </div>\r\n        </div>\r\n        {/* Fundraiser Text */}\r\n      </div>\r\n      {/* text field */}\r\n      <div css={css`width: 50%;`}>\r\n        <div css={css`\r\n                  background-color: #141914;\r\n                  border-radius: 24px;\r\n                  padding: 24px; 32px;\r\n                `}\r\n        >\r\n          <p css={inputGroupStyle}>\r\n            Proposal Name\r\n            <Input\r\n              css={inputStyle}\r\n              placeholder=\"Enter Name\"\r\n            />\r\n          </p>\r\n          <div css={css`\r\n                    display: flex;\r\n                  `}\r\n          >\r\n            <p css={inputGridGroupStyle}>\r\n              Backing Funds\r\n              <Input\r\n                css={inputStyle}\r\n                placeholder=\"0.0\"\r\n              />\r\n            </p>\r\n            <p css={inputGroupStyle}>\r\n              License Serial NO.\r\n              <Input\r\n                css={inputStyle}\r\n                placeholder=\"ABCDE_0000\"\r\n              />\r\n            </p>\r\n          </div>\r\n          <div css={inputGroupStyle}>\r\n            Staking Duration\r\n            <div css={css`width: 100%; text-align: right;`}>\r\n              <BaseButton \r\n                style={selectedButton === \"18\" ? selectButton : deSelectButton}\r\n                text=\"18 Month\"\r\n                onClick={() => setSelectedButton(\"18\")}\r\n              />\r\n              <BaseButton \r\n                style={selectedButton === \"24\" ? selectButton : deSelectButton}\r\n                text=\"24 Month\"\r\n                onClick={() => setSelectedButton(\"24\")}\r\n              />\r\n              <BaseButton \r\n                style={selectedButton === \"36\" ? selectButton : deSelectButton}\r\n                text=\"36 Month\"\r\n                onClick={() => setSelectedButton(\"36\")}\r\n              />\r\n            </div>\r\n          </div>\r\n          <p css={textGroupStyle}>\r\n            Crowd Funding End Date\r\n            <span css={spanStyle}>10/21/2023</span>\r\n          </p>\r\n          <p css={textGroupStyle}>\r\n            Annual Interest Rate\r\n            <span css={spanStyle}>0%</span>\r\n          </p>\r\n          <p css={textGroupStyle}>\r\n            Proposal Fee\r\n            <span css={spanStyle}>10485.76 HYPC</span>\r\n          </p>\r\n          <div css={css`display: flex;`}>\r\n            <Upload \r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n            >\r\n              <div css={css`display: flex; padding: 8px 12px; border: 1px solid #9e9e9e; border-radius: 12px;`}>\r\n                <span css={css`font-weight: 700; color: #9e9e9e; padding-right: 16px;`}>Image</span>\r\n                <img alt=\"upload_image\" src={icon_upload} />\r\n              </div>\r\n            </Upload>\r\n            <BaseButton \r\n              text=\"Create New Proposal\"\r\n              style={css`\r\n                width: 100%;\r\n                border: 0;\r\n                margin-left: 16px;\r\n                color: #fff;\r\n                background: linear-gradient(to right, #39945C, #82E5A8);\r\n              `}\r\n              onClick={() => callSmartContract()}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProposal;\r\n\r\nconst selectedStyle = css`\r\n  height: auto;\r\n  padding: 8px 20px;\r\n  color: #fff;\r\n  background-color: transparent;\r\n  border-radius: 0;\r\n  border: none;\r\n  border-bottom: 2px solid #fff;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst deSelectedStyle = css`\r\n  height: auto;\r\n  padding: 8px 20px;\r\n  color: #9E9E9E;\r\n  background-color: transparent;\r\n  border-radius: 0;\r\n  border: none;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst inputGroupStyle = css`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 12px;\r\n  padding: 16px 24px;\r\n  color: #fff;\r\n  background-color: #000;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst inputGridGroupStyle = css`\r\n  ${inputGroupStyle};\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst inputStyle = css`\r\n  text-align: right !important;\r\n  border: none;\r\n  border-radius: 12px;\r\n  color: #fff;\r\n  background-color: #000;\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst selectButton = css`\r\n  border: 1px solid #fff;\r\n  color: #fff;\r\n  background-color: #000;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst deSelectButton = css`\r\n  border: 1px solid #666;\r\n  color: #666;\r\n  background-color: #000;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst textGroupStyle = css`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 12px;\r\n  padding: 16px 24px;\r\n  color: #9E9E9E;\r\n  background-color: #1B201B;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst spanStyle = css`\r\n  color: #fff;\r\n  text-align: right;\r\n  width: 100%;\r\n`;\r\n\r\n","/** @jsxImportSource @emotion/react */\r\nimport React, { useState } from 'react';\r\nimport { css } from '@emotion/react';\r\nimport BaseButton from 'components/BaseButton';\r\nimport Invest from 'components/proposal/Invest';\r\nimport CreateProposal from 'components/proposal/CreateProposal';\r\n\r\nconst ProposalDetail: React.FC = () => {\r\n\r\n  const [isFirstSelect, setIsFirstSelect] = useState(false);\r\n\r\n  const handleSelect = (value: boolean) => {\r\n    setIsFirstSelect(value);\r\n  }; \r\n\r\n  return (\r\n    <div css={css`\r\n              width: 100%;\r\n              height: 100%;\r\n              background-color: #000;\r\n              padding: 108px 80px 0px;\r\n            `}\r\n    >\r\n      {isFirstSelect ? (\r\n        <Invest handleSelect={handleSelect} />\r\n      ) : (\r\n        <CreateProposal handleSelect={handleSelect} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProposalDetail;\r\n"],"names":["_ref","endpoint","method","data","setData","useState","loading","setLoading","error","setError","execute","async","response","axios","url","concat","process","postData","resultCode","resultMessage","_HomeText$","_HomeText$2","_HomeText$3","handleSelect","currentSubText","HomeText","subText","_jsxs","css","_templateObject","_taggedTemplateLiteral","children","_templateObject2","_jsx","BaseButton","text","style","selectedStyle","onClick","deSelectedStyle","_templateObject3","_templateObject4","mainText1","_templateObject5","mainText2","_templateObject6","map","index","_templateObject7","_templateObject8","_templateObject9","selectedButton","setSelectedButton","ethersProvider","window","useWalletStore","useApi","createProposal","abi","CrowdAbi","contractAddress","contract","ethers","transactionHash","ownerAddress","proposalTitle","targetAmount","transactionId","inputGroupStyle","Input","inputStyle","placeholder","_templateObject10","inputGridGroupStyle","_templateObject11","selectButton","deSelectButton","textGroupStyle","spanStyle","_templateObject12","Upload","showUploadList","beforeUpload","file","isJpgOrPng","type","message","_templateObject13","_templateObject14","alt","src","_templateObject15","ApproveAbi","result","approve","console","log","callSmartContract","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","ProposalDetail","isFirstSelect","setIsFirstSelect","value","Invest","CreateProposal"],"sourceRoot":""}