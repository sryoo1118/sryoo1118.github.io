{"version":3,"file":"static/js/630.82295824.chunk.js","mappings":"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","sources":["components/BaseButton.tsx","constants/HomeText.ts","components/BaseModal.tsx","components/nav/LayoutHeader.tsx","routes/routes.ts","components/nav/LayoutContent.tsx","layout/DefaultLayout.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport React, { ReactNode, useState } from 'react';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { css, SerializedStyles } from '@emotion/react';\r\n\r\ninterface ChildProps {\r\n  text: string | ReactNode;\r\n  onClick?: () => void;\r\n  style?: SerializedStyles;\r\n}\r\n\r\nconst BaseButton: React.FC<ChildProps> = ({ text, style, onClick }) => {\r\n  \r\n  return (\r\n    <>\r\n      <button \r\n        css={css`\r\n            height: 40px;\r\n            border-radius: 12px;\r\n            padding: 8px 20px;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n            ${style}\r\n          `}\r\n        onClick={onClick}\r\n      >\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseButton;","import image_main1 from \"assets/images/home/image_main1.png\";\r\nimport image_main2 from \"assets/images/home/image_main2.png\";\r\nimport image_main3 from \"assets/images/home/image_main3.png\";\r\nimport button_main1 from \"assets/images/home/button_main1.png\";\r\nimport button_main2 from \"assets/images/home/button_main2.png\";\r\nimport button_main3 from \"assets/images/home/button_main3.png\";\r\n\r\nexport interface HomeTextItem {\r\n  id: string;\r\n  backgroundColor: string;\r\n  mainText1: string;\r\n  mainText2: string;\r\n  subText: string[];\r\n  mainImage: string;\r\n  buttonImage: string;\r\n  buttonText: string;\r\n}\r\n\r\nconst HomeText: HomeTextItem[] = [\r\n  {\r\n    id: \"main1\",\r\n    backgroundColor: \"#fff\",\r\n    mainText1: \"A Service for\",\r\n    mainText2: \"Distributing Value\",\r\n    subText: [\r\n      \"Discover the future with the HyperShare System, an innovative cornerstone of the HyperCycle ecosystem.\",\r\n      \"This dynamic platform is ingeniously crafted, combining the power of smart contracts with advanced tokenization models.\",\r\n      \"This fusion not only propels our operations but also optimizes value distribution, setting new standards in efficiency and effectiveness.\",\r\n    ],\r\n    mainImage: image_main1,\r\n    buttonImage: button_main1,\r\n    buttonText: \"\"\r\n  },\r\n  {\r\n    id: \"main2\",\r\n    backgroundColor: \"#2E2E2E\",\r\n    mainText1: \"HyperShare\",\r\n    mainText2: \"Contributor\",\r\n    subText: [\r\n      \"Join us in an exciting opportunity to shape the future of the HyperCycle project!\",\r\n      \"We invite you to select and contribute to a token pool proposal that will drive our project's expansion.\",\r\n      \"Your support and involvement are crucial in making HyperCycle's vision a reality.\",\r\n      \"Let's build something amazing together!\"\r\n    ],\r\n    mainImage: image_main2,\r\n    buttonImage: button_main2,\r\n    buttonText: \"Token Pool Proposal\"\r\n  },\r\n  {\r\n    id: \"main3\",\r\n    backgroundColor: \"#FFEEDE\",\r\n    mainText1: \"HyperShare\",\r\n    mainText2: \"Fundraiser\",\r\n    subText: [\r\n      \"Step into the role of a visionary leader as an individual or corporate entity, orchestrating the token pool proposal and activities for the HyperCycle Network.\",\r\n      \"Embrace this unique opportunity to steer the course of innovation and growth within a cutting-edge ecosystem.\",\r\n      \"Your guidance and expertise can shape the future, creating impactful and transformative experiences in the digital realm.\"\r\n    ],\r\n    mainImage: image_main3,\r\n    buttonImage: button_main3,\r\n    buttonText: \"Create New Proposal\"\r\n  }\r\n];\r\n\r\nexport default HomeText;","import React, { ReactNode, useState } from 'react';\r\nimport { Button, Modal } from 'antd';\r\nimport { useModalStore } from 'store/store';\r\n\r\ninterface ChildProps {\r\n  handleCancel:  () => void;\r\n  title: ReactNode;\r\n  content: ReactNode;\r\n}\r\n\r\nconst BaseModal: React.FC<ChildProps> = ({ handleCancel, title, content }) => {\r\n  const { isModalOpen } = useModalStore();\r\n  return (\r\n    <>\r\n      <Modal \r\n        title={title}\r\n        open={isModalOpen} \r\n        onCancel={handleCancel}\r\n        okButtonProps={{ style: { display: \"none\" } }}\r\n        cancelButtonProps={{ style: { display: \"none\" } }}\r\n      >\r\n        {content}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseModal;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { EthersContext } from \"context/EthersProvider\";\r\nimport { useWalletStore } from 'store/store';\r\nimport { Layout } from \"antd\";\r\nimport { css } from '@emotion/react';\r\nimport { useStore } from 'store/store';\r\nimport { useModalStore } from 'store/store';\r\nimport HomeText from \"constants/HomeText\";\r\nimport BaseModal from \"components/BaseModal\";\r\nimport BaseButton from \"components/BaseButton\";\r\nimport logo from \"assets/images/image_logo.png\";\r\nimport logo_white from \"assets/images/image_logo2.png\";\r\nimport button_metamask from \"assets/images/common/image_metamask_button.png\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst LayoutHeader: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { currentItemIndex } = useStore();\r\n  const { isModalOpen, setIsModalOpen } = useModalStore();\r\n  const [account, setAccount] = useState(\"\");\r\n  const backgroundColor = HomeText[currentItemIndex]?.backgroundColor || \"\";\r\n  const { ethersProvider } = useWalletStore();\r\n  const { functions } = React.useContext(EthersContext);\r\n  const { setupEthersProvider } = functions;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if(ethersProvider) {\r\n        const signer = ethersProvider.getSigner();\r\n        const currentAccount = await signer.getAddress();\r\n        setAccount(currentAccount);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [ethersProvider]);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleConnectClick = async () => {\r\n    if (!ethersProvider) {\r\n      // 헤더 버튼 클릭 시 Ethereum 지갑이 설정되어 있지 않다면 연동을 시도\r\n      await setupEthersProvider();\r\n    }\r\n  };\r\n\r\n  const isSuperUser = () => {\r\n    // if(account === process.env.REACT_APP_SUPERUSER_ADDRESS) {\r\n    //   return true;\r\n    // } else {\r\n    //   return false;\r\n    // }\r\n    return true;\r\n  };\r\n\r\n  const ModalTitle = () => {\r\n    return (\r\n      <div\r\n        css={css`\r\n          text-align: center;\r\n          padding-bottom: 32px;\r\n          border-bottom: 1px solid #d9d9d9;\r\n        `}\r\n      >\r\n        <p css={css`\r\n                font-size: 24px;\r\n                font-weight: 700;\r\n                background: linear-gradient(to right, #39945C, #82E5A8 );\r\n                -webkit-background-clip: text;\r\n                color: transparent;\r\n              `}\r\n        >\r\n          Connect Wallet\r\n        </p>\r\n        <p css={css`\r\n                font-size: 16px;\r\n                color: #9e9e9e;\r\n              `}\r\n        >\r\n          To start using HYPER SHARE DeFi\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ModalContent = () => {\r\n    return (\r\n      <div css={css`\r\n                text-align: center;\r\n                padding-top: 16px;\r\n              `}\r\n      >\r\n        <BaseButton\r\n          text={\r\n            <img alt=\"metamask_button\" src={button_metamask} />\r\n          }\r\n          style={css`\r\n                  height: auto;\r\n                  border: 0;\r\n                  padding: 0;\r\n                  background: none;\r\n                  &:hover {\r\n                    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.15);\r\n                  }\r\n                `}\r\n          onClick={() => handleConnectClick()}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      css={css`\r\n          position: sticky;\r\n          top: 0;\r\n          z-index: 1;\r\n          width: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n          background-color: ${location.pathname === \"/\" ? backgroundColor : \"transparent\"};\r\n        `}\r\n    >\r\n      <div css={css`\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                width: 100%;\r\n              `}\r\n      >\r\n        <img \r\n          css={css`\r\n                cursor: pointer;\r\n              `}\r\n          alt=\"logo\" \r\n          src={currentItemIndex === 1 || location.pathname !== \"/\" ? logo_white : logo}\r\n          onClick={() => navigate(\"/\")}\r\n        />\r\n        {account ? (\r\n          <BaseButton\r\n            text=\"My Page\"\r\n            style={css`\r\n                    color: #fff;\r\n                    font-weight: 700;\r\n                    border: 0; \r\n                    background: linear-gradient(to right, #39945C, #82E5A8 );\r\n                  `}\r\n            onClick={() => isSuperUser() ? navigate(\"/mypage/createhyperpool\") : navigate(\"/mypage/contributor\")}\r\n          />\r\n        ) : (\r\n          <BaseButton\r\n            text=\"Connect Wallet\"\r\n            style={css`\r\n                    color: #fff;\r\n                    font-weight: 700;\r\n                    border: 0; \r\n                    background: linear-gradient(to right, #39945C, #82E5A8 );\r\n                  `}\r\n            onClick={() => setIsModalOpen(true)}\r\n          />\r\n        )}\r\n      </div>\r\n      <BaseModal \r\n        handleCancel={handleCancel}\r\n        title={<ModalTitle />}\r\n        content={<ModalContent />}\r\n      />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default LayoutHeader;\r\n","import React from \"react\";\r\nimport { RouteProps } from \"react-router-dom\";\r\n\r\nconst Home = React.lazy(() => import(\"pages/Home\"));\r\n// proposal\r\nconst Proposal = React.lazy(() => import(\"pages/proposal/Proposal\"));\r\nconst ProposalDetail = React.lazy(() => import(\"pages/proposal/ProposalDetail\"));\r\n\r\n// mypage\r\nconst Contributor = React.lazy(() => import(\"pages/mypage/Contributor\"));\r\nconst Fundraiser = React.lazy(() => import(\"pages/mypage/Fundraiser\"));\r\nconst CreateHyperPool = React.lazy(() => import(\"pages/mypage/CreateHyperPool\"));\r\n\r\ntype CustomRouteProps = {\r\n  path: string;\r\n  exact?: boolean;\r\n  name: string;\r\n  element: React.FC;\r\n  requiresMetaMask?: boolean;\r\n}\r\n\r\nconst routes: CustomRouteProps[] = [\r\n  { path: \"/\", exact: true, name: \"Home\", element: Home },\r\n  { path: \"/proposal\", name: \"Proposal\", element: Proposal },\r\n  { path: \"/proposal/detail\", name: \"Proposal detail\", element: ProposalDetail },\r\n  { path: \"/mypage/contributor\", name: \"Contributor\", element: Contributor },\r\n  { path: \"/mypage/fundraiser\", name: \"Fundraiser\", element: Fundraiser },\r\n  { path: \"/mypage/createhyperpool\", name: \"CreateHyperPool\", element: CreateHyperPool },\r\n];\r\n\r\nexport default routes;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React, { Suspense } from 'react';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport routes from \"routes/routes\";\r\nimport { useModalStore } from 'store/store';\r\n\r\nconst Page404 = React.lazy(() => import(\"pages/Page404\"));\r\n\r\nconst LayoutContent: React.FC = () => {\r\n\r\n  // const beforePageChange = (path: string, requiresMetaMask?: boolean, element: React.FC) => {\r\n  //   if(requiresMetaMask) {\r\n\r\n  //   }\r\n  //   return <element />;\r\n  // };\r\n\r\n  return (\r\n    <Suspense>\r\n      <Routes>\r\n        {routes.map((route, idx) => {\r\n          return (\r\n            route.element && (\r\n              <Route\r\n                key={idx}\r\n                path={route.path}\r\n                {...(route.exact ? { exact: true } : {})}\r\n                {...(route.name ? { name: route.name } : {})}\r\n                element={<route.element />}\r\n              />\r\n            )\r\n          );\r\n        })}\r\n        <Route path=\"*\" element={<Page404 />} />\r\n      </Routes>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default LayoutContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { css } from '@emotion/react';\r\nimport LayoutHeader from \"components/nav/LayoutHeader\";\r\nimport LayoutContent from \"components/nav/LayoutContent\";\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst DefaultLayout: React.FC = () => {\r\n\r\n  return (\r\n    <Layout css={css`width: 100%; height: 100%;`}>\r\n      <LayoutHeader />\r\n      <LayoutContent />\r\n      {/* <Footer css={css`text-align: center;`}>Ant Design ©2023 Created by Ant UED</Footer> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DefaultLayout;"],"names":["_ref","text","style","onClick","_jsx","_Fragment","children","css","_templateObject","_taggedTemplateLiteral","id","backgroundColor","mainText1","mainText2","subText","mainImage","image_main1","buttonImage","buttonText","image_main2","image_main3","handleCancel","title","content","isModalOpen","useModalStore","Modal","open","onCancel","okButtonProps","display","cancelButtonProps","Header","Layout","LayoutHeader","_HomeText$currentItem","navigate","useNavigate","location","useLocation","currentItemIndex","useStore","setIsModalOpen","account","setAccount","useState","HomeText","ethersProvider","useWalletStore","functions","React","EthersContext","setupEthersProvider","useEffect","async","signer","getSigner","currentAccount","getAddress","fetchData","_jsxs","_templateObject6","pathname","_templateObject7","_templateObject8","alt","src","BaseButton","_templateObject9","_templateObject10","BaseModal","ModalTitle","_templateObject2","_templateObject3","ModalContent","_templateObject4","_templateObject5","handleConnectClick","path","exact","name","element","Page404","LayoutContent","Suspense","Routes","routes","map","route","idx","Route","Footer","DefaultLayout"],"sourceRoot":""}